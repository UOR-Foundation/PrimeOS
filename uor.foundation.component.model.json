{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor.foundation/component.model",
  "title": "UOR Component Model Schema",
  "description": "Schema defining the model that links component entities and interfaces in the UOR system",
  "type": "object",
  "required": [
    "id",
    "type",
    "name",
    "entities",
    "interfaces"
  ],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the component model"
    },
    "type": {
      "type": "string",
      "const": "component.model",
      "description": "Type of the schema"
    },
    "name": {
      "type": "string",
      "description": "Name of the component model"
    },
    "description": {
      "type": "string",
      "description": "Description of the component model's purpose"
    },
    "version": {
      "type": "string",
      "description": "Version of the component model"
    },
    "entities": {
      "type": "array",
      "description": "Component entities in this model",
      "items": {
        "type": "object",
        "required": [
          "id",
          "type",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uri",
            "description": "Unique identifier for the component entity"
          },
          "type": {
            "type": "string",
            "description": "Type of the component entity"
          },
          "name": {
            "type": "string",
            "description": "Name of the component entity"
          },
          "description": {
            "type": "string",
            "description": "Description of the component entity"
          },
          "category": {
            "type": "string",
            "description": "Category of the component entity",
            "enum": [
              "ui",
              "data",
              "service",
              "utility",
              "infrastructure",
              "domain",
              "other"
            ]
          },
          "implementedInterfaces": {
            "type": "array",
            "description": "Interfaces implemented by this component entity",
            "items": {
              "type": "string",
              "format": "uri",
              "description": "Reference to an interface in the model"
            }
          },
          "dependencies": {
            "type": "array",
            "description": "Dependencies of this component entity",
            "items": {
              "type": "string",
              "format": "uri",
              "description": "Reference to a dependency"
            }
          }
        }
      }
    },
    "interfaces": {
      "type": "array",
      "description": "Component interfaces in this model",
      "items": {
        "type": "object",
        "required": [
          "id",
          "type",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uri",
            "description": "Unique identifier for the component interface"
          },
          "type": {
            "type": "string",
            "description": "Type of the component interface"
          },
          "name": {
            "type": "string",
            "description": "Name of the component interface"
          },
          "description": {
            "type": "string",
            "description": "Description of the component interface"
          },
          "extends": {
            "type": "array",
            "description": "Interfaces that this interface extends",
            "items": {
              "type": "string",
              "format": "uri",
              "description": "Reference to an interface"
            }
          },
          "methods": {
            "type": "array",
            "description": "Methods defined by this interface",
            "items": {
              "type": "object",
              "required": [
                "name",
                "description"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "description": "Name of the method"
                },
                "description": {
                  "type": "string",
                  "description": "Description of the method"
                },
                "signature": {
                  "type": "string",
                  "description": "Signature of the method"
                }
              }
            }
          }
        }
      }
    },
    "relationships": {
      "type": "array",
      "description": "Relationships between component entities and interfaces",
      "items": {
        "type": "object",
        "required": [
          "entityId",
          "interfaceId",
          "type"
        ],
        "properties": {
          "entityId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to a component entity"
          },
          "interfaceId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to a component interface"
          },
          "type": {
            "type": "string",
            "description": "Type of relationship",
            "enum": [
              "implements",
              "depends",
              "extends",
              "uses",
              "other"
            ]
          },
          "description": {
            "type": "string",
            "description": "Description of the relationship"
          },
          "properties": {
            "type": "object",
            "description": "Additional properties of the relationship",
            "additionalProperties": true
          }
        }
      }
    },
    "dependencies": {
      "type": "array",
      "description": "External dependencies of the component model",
      "items": {
        "type": "object",
        "required": [
          "id",
          "type",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uri",
            "description": "Identifier of the dependency"
          },
          "type": {
            "type": "string",
            "description": "Type of the dependency",
            "enum": [
              "library",
              "framework",
              "service",
              "api",
              "other"
            ]
          },
          "name": {
            "type": "string",
            "description": "Name of the dependency"
          },
          "version": {
            "type": "string",
            "description": "Version of the dependency"
          },
          "description": {
            "type": "string",
            "description": "Description of the dependency"
          },
          "url": {
            "type": "string",
            "format": "uri",
            "description": "URL to the dependency"
          }
        }
      }
    },
    "validationRules": {
      "type": "array",
      "description": "Validation rules for the component model",
      "items": {
        "type": "object",
        "required": [
          "name",
          "description",
          "rule"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the validation rule"
          },
          "description": {
            "type": "string",
            "description": "Description of the validation rule"
          },
          "rule": {
            "type": "string",
            "description": "Expression or code defining the validation rule"
          },
          "severity": {
            "type": "string",
            "enum": [
              "error",
              "warning",
              "info"
            ],
            "default": "error",
            "description": "Severity level if the rule is violated"
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata for the component model",
      "additionalProperties": true
    }
  },
  "schemaType": "model"
}