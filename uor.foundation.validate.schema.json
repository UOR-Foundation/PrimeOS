{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor.foundation/validate",
  "title": "UOR Validate Schema",
  "description": "Schema defining the validation system in UOR for validating schemas against reference schemas",
  "type": "object",
  "required": [
    "id",
    "type",
    "targetSchema",
    "referenceSchema"
  ],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the validation operation"
    },
    "type": {
      "type": "string",
      "const": "validate",
      "description": "Type identifier for validation operations"
    },
    "targetSchema": {
      "type": "string",
      "format": "uri",
      "description": "URI reference to the schema to be validated"
    },
    "referenceSchema": {
      "type": "string",
      "format": "uri",
      "description": "URI reference to the schema to validate against"
    },
    "validationMode": {
      "type": "string",
      "enum": [
        "strict",
        "lenient",
        "structural"
      ],
      "default": "strict",
      "description": "Mode of validation to perform"
    },
    "validationOptions": {
      "type": "object",
      "description": "Additional options for validation",
      "properties": {
        "ignoreAdditionalProperties": {
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore additional properties not in the reference schema"
        },
        "ignoreFormatConstraints": {
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore format constraints during validation"
        },
        "ignoreEnumConstraints": {
          "type": "boolean",
          "default": false,
          "description": "Whether to ignore enum constraints during validation"
        },
        "customRules": {
          "type": "array",
          "description": "Custom validation rules to apply",
          "items": {
            "type": "object",
            "required": [
              "name",
              "rule"
            ],
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the custom rule"
              },
              "description": {
                "type": "string",
                "description": "Description of the rule"
              },
              "rule": {
                "type": "string",
                "description": "Expression or code defining the rule"
              },
              "severity": {
                "type": "string",
                "enum": [
                  "error",
                  "warning",
                  "info"
                ],
                "default": "error",
                "description": "Severity level if the rule is violated"
              }
            }
          }
        }
      }
    },
    "validationResults": {
      "type": "object",
      "description": "Results of the validation operation",
      "properties": {
        "valid": {
          "type": "boolean",
          "description": "Whether the validation passed"
        },
        "timestamp": {
          "type": "string",
          "format": "date-time",
          "description": "When the validation was performed"
        },
        "errors": {
          "type": "array",
          "description": "Validation errors if any",
          "items": {
            "type": "object",
            "required": [
              "path",
              "message",
              "severity"
            ],
            "properties": {
              "path": {
                "type": "string",
                "description": "JSON path to the error location"
              },
              "message": {
                "type": "string",
                "description": "Error message"
              },
              "severity": {
                "type": "string",
                "enum": [
                  "error",
                  "warning",
                  "info"
                ],
                "default": "error",
                "description": "Severity of the validation issue"
              },
              "rule": {
                "type": "string",
                "description": "Name of the rule that was violated"
              }
            }
          }
        },
        "summary": {
          "type": "object",
          "description": "Summary of validation results",
          "properties": {
            "errorCount": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of errors"
            },
            "warningCount": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of warnings"
            },
            "infoCount": {
              "type": "integer",
              "minimum": 0,
              "description": "Number of informational messages"
            }
          }
        }
      }
    },
    "metadata": {
      "type": "object",
      "description": "Additional metadata for the validation operation",
      "properties": {
        "createdBy": {
          "type": "string",
          "description": "Entity that created this validation operation"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "When this validation operation was created"
        },
        "description": {
          "type": "string",
          "description": "Human-readable description of this validation operation"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Tags associated with this validation operation"
        }
      }
    }
  },
  "examples": [
    {
      "id": "https://uor.foundation/validate/example1",
      "type": "validate",
      "targetSchema": "https://uor.foundation/component",
      "referenceSchema": "https://uor.foundation/entity",
      "validationMode": "strict",
      "validationOptions": {
        "ignoreAdditionalProperties": true
      },
      "metadata": {
        "description": "Validate component schema against entity schema",
        "tags": [
          "component",
          "entity",
          "validation"
        ]
      }
    }
  ],
  "schemaType": "validate"
}