{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor.foundation/schemas/algebra/polynomial-multiplication-operation.json",
  "title": "Polynomial Multiplication Operation Schema",
  "description": "Schema defining multiplication operation within the polynomial ring domain using the UOR prime factorization framework",
  "type": "object",
  "required": ["id", "operationType", "domain", "operationRules", "homomorphismProperties"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "const": "urn:uor:algebra:operation:polynomial-multiplication",
      "description": "Unique identifier for polynomial multiplication operation"
    },
    "operationType": {
      "type": "string",
      "const": "multiplication",
      "description": "Type of operation"
    },
    "name": {
      "type": "string",
      "const": "Polynomial Multiplication",
      "description": "Human-readable name for the operation"
    },
    "description": {
      "type": "string",
      "const": "Multiplication operation in the domain of polynomials, defined using irreducible polynomial factorization",
      "description": "Description of the operation"
    },
    "symbol": {
      "type": "string",
      "const": "×",
      "description": "Mathematical symbol for multiplication"
    },
    "domain": {
      "type": "object",
      "description": "The domain in which this operation is defined",
      "required": ["id", "name", "elements"],
      "properties": {
        "id": {
          "type": "string",
          "format": "uri",
          "const": "urn:uor:domain:algebra:polynomial-ring",
          "description": "Identifier for the polynomial ring domain"
        },
        "name": {
          "type": "string",
          "const": "Polynomial Ring Domain",
          "description": "Name of the domain"
        },
        "elements": {
          "type": "string",
          "const": "polynomials",
          "description": "Type of elements this operation works with"
        },
        "constraints": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Constraints on the operation's domain"
          },
          "default": []
        }
      }
    },
    "operationRules": {
      "type": "object",
      "description": "Rules defining how polynomial multiplication works",
      "required": ["formalDefinition", "standardRepresentation", "canonicalRepresentation"],
      "properties": {
        "formalDefinition": {
          "type": "string",
          "const": "For polynomials f(x) = ∑ aᵢxⁱ and g(x) = ∑ bᵢxⁱ, their product f(x) × g(x) = ∑ cₖxᵏ where cₖ = ∑ᵢ₊ⱼ₌ₖ aᵢbⱼ (convolution of coefficients)",
          "description": "Formal mathematical definition of polynomial multiplication"
        },
        "standardRepresentation": {
          "type": "object",
          "description": "Standard coefficient representation of polynomial multiplication",
          "required": ["definition", "method"],
          "properties": {
            "definition": {
              "type": "string",
              "const": "For polynomials f(x) and g(x) in their coefficient representations, f(x) × g(x) is computed by convolving their coefficient sequences",
              "description": "Definition in terms of standard coefficient representation"
            },
            "method": {
              "type": "string",
              "const": "The product is computed by multiplying each term of f(x) with each term of g(x) and collecting like terms",
              "description": "Method for computing multiplication in standard form"
            },
            "degreeRule": {
              "type": "string",
              "const": "For polynomials of degrees m and n, their product has degree m+n",
              "description": "Rule for determining the degree of the product"
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "operands": {
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Operand expressions"
                    }
                  },
                  "result": {
                    "type": "string",
                    "description": "Result of the multiplication"
                  },
                  "explanation": {
                    "type": "string",
                    "description": "Explanation of the calculation"
                  }
                }
              },
              "default": [
                {
                  "operands": ["x² + 3x + 2", "x - 1"],
                  "result": "x³ + 2x² - x - 2",
                  "explanation": "(x² + 3x + 2)(x - 1) = x³ - x² + 3x² - 3x + 2x - 2 = x³ + 2x² - x - 2"
                }
              ]
            }
          }
        },
        "canonicalRepresentation": {
          "type": "object",
          "description": "Canonical representation using irreducible polynomial factorization",
          "required": ["definition", "method", "transformationRules"],
          "properties": {
            "definition": {
              "type": "string",
              "const": "For polynomials f(x) and g(x) with irreducible factorizations f(x) = c₁·∏ pᵢ(x)^aᵢ and g(x) = c₂·∏ pᵢ(x)^bᵢ, their product f(x) × g(x) = c₁c₂·∏ pᵢ(x)^(aᵢ+bᵢ)",
              "description": "Definition in terms of irreducible factorization"
            },
            "method": {
              "type": "string",
              "const": "Add the exponents of corresponding irreducible polynomial factors in the prime factorizations of the operands",
              "description": "Method for computing multiplication using prime factorization"
            },
            "transformationRules": {
              "type": "array",
              "description": "Rules for transforming irreducible factorizations under multiplication",
              "items": {
                "type": "object",
                "properties": {
                  "rule": {
                    "type": "string",
                    "description": "A transformation rule for irreducible factorizations"
                  },
                  "formula": {
                    "type": "string",
                    "description": "Mathematical formula for the rule"
                  },
                  "explanation": {
                    "type": "string",
                    "description": "Explanation of the rule"
                  }
                }
              },
              "default": [
                {
                  "rule": "Exponent Addition Rule",
                  "formula": "p(x)^a × p(x)^b = p(x)^(a+b)",
                  "explanation": "When multiplying powers of the same irreducible polynomial, add the exponents"
                },
                {
                  "rule": "Irreducible Factor Union Rule",
                  "formula": "∏pᵢ(x)^aᵢ × ∏pⱼ(x)^bⱼ = ∏pₖ(x)^(aₖ+bₖ)",
                  "explanation": "The prime factorization of a product is the union of all irreducible factors, with exponents added for common factors"
                },
                {
                  "rule": "Coefficient Multiplication Rule",
                  "formula": "(c₁·f(x)) × (c₂·g(x)) = (c₁·c₂)·(f(x) × g(x))",
                  "explanation": "The leading coefficient of the product is the product of the leading coefficients"
                }
              ]
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "operands": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "polynomial": {
                          "type": "string",
                          "description": "Standard expression"
                        },
                        "factorization": {
                          "type": "string",
                          "description": "Irreducible factorization"
                        }
                      }
                    }
                  },
                  "result": {
                    "type": "object",
                    "properties": {
                      "polynomial": {
                        "type": "string",
                        "description": "Standard expression of result"
                      },
                      "factorization": {
                        "type": "string",
                        "description": "Irreducible factorization of result"
                      }
                    }
                  },
                  "explanation": {
                    "type": "string",
                    "description": "Explanation of the calculation using factorization"
                  }
                }
              },
              "default": [
                {
                  "operands": [
                    {
                      "polynomial": "x² - 1",
                      "factorization": "(x - 1)(x + 1)"
                    },
                    {
                      "polynomial": "x² + 1",
                      "factorization": "(x² + 1)"
                    }
                  ],
                  "result": {
                    "polynomial": "x⁴ - 1",
                    "factorization": "(x - 1)(x + 1)(x² + 1)"
                  },
                  "explanation": "To multiply (x² - 1)(x² + 1) using factorization, we combine all irreducible factors: (x - 1)(x + 1)(x² + 1) = x⁴ - 1"
                },
                {
                  "operands": [
                    {
                      "polynomial": "x³ - x",
                      "factorization": "x(x - 1)(x + 1)"
                    },
                    {
                      "polynomial": "x² - 4",
                      "factorization": "(x - 2)(x + 2)"
                    }
                  ],
                  "result": {
                    "polynomial": "x⁵ - 4x³ - x³ + 4x",
                    "factorization": "x(x - 1)(x + 1)(x - 2)(x + 2)"
                  },
                  "explanation": "To multiply x(x - 1)(x + 1)(x - 2)(x + 2), we combine all irreducible factors to get x⁵ - 4x³ - x³ + 4x = x⁵ - 5x³ + 4x"
                }
              ]
            }
          }
        }
      }
    },
    "homomorphismProperties": {
      "type": "object",
      "description": "How polynomial multiplication demonstrates homomorphism properties",
      "required": ["operationMapping", "structurePreservation"],
      "properties": {
        "operationMapping": {
          "type": "object",
          "properties": {
            "sourceOperation": {
              "type": "string",
              "const": "Multiplication in polynomial ring",
              "description": "Operation in the source domain (standard representation)"
            },
            "targetOperation": {
              "type": "string",
              "const": "Addition of exponent vectors in irreducible polynomial factorization",
              "description": "Corresponding operation in the target domain (prime factorization)"
            },
            "mappingFunction": {
              "type": "string",
              "const": "φ: F[x] → ℤ^∞, where φ maps a polynomial to its vector of exponents over irreducible polynomials",
              "description": "Function that maps between domains"
            }
          }
        },
        "structurePreservation": {
          "type": "object",
          "properties": {
            "isomorphism": {
              "type": "boolean",
              "const": true,
              "description": "Whether the mapping is an isomorphism"
            },
            "preservedStructure": {
              "type": "string",
              "const": "Multiplicative monoid structure",
              "description": "Mathematical structure preserved by the mapping"
            },
            "explanation": {
              "type": "string",
              "const": "The irreducible factorization mapping φ transforms multiplication in the polynomial ring into vector addition in the space of irreducible polynomial exponents, preserving the multiplicative structure. This is a fundamental homomorphism property of the UOR framework applied to polynomials.",
              "description": "Explanation of how structure is preserved"
            }
          }
        },
        "mathematicalFormulation": {
          "type": "string",
          "const": "φ(f(x) × g(x)) = φ(f(x)) + φ(g(x)), where φ is the irreducible factorization mapping",
          "description": "Formal mathematical formulation of the homomorphism"
        },
        "fieldExtension": {
          "type": "string",
          "const": "The homomorphism properties remain valid regardless of the coefficient field, though the set of irreducible polynomials depends on the field",
          "description": "How the homomorphism behaves across different fields"
        }
      }
    },
    "algebraicProperties": {
      "type": "object",
      "description": "Algebraic properties of polynomial multiplication",
      "properties": {
        "associativity": {
          "type": "object",
          "properties": {
            "isAssociative": {
              "type": "boolean",
              "const": true,
              "description": "Whether multiplication is associative"
            },
            "proof": {
              "type": "string",
              "const": "Polynomial multiplication is associative: (f(x) × g(x)) × h(x) = f(x) × (g(x) × h(x))",
              "description": "Reference to proof of associativity"
            }
          }
        },
        "commutativity": {
          "type": "object",
          "properties": {
            "isCommutative": {
              "type": "boolean",
              "const": true,
              "description": "Whether multiplication is commutative"
            },
            "proof": {
              "type": "string",
              "const": "Polynomial multiplication is commutative: f(x) × g(x) = g(x) × f(x)",
              "description": "Reference to proof of commutativity"
            }
          }
        },
        "identityElement": {
          "type": "object",
          "properties": {
            "exists": {
              "type": "boolean",
              "const": true,
              "description": "Whether an identity element exists"
            },
            "value": {
              "type": "string",
              "const": "1 (constant polynomial)",
              "description": "Value of the identity element"
            },
            "factorization": {
              "type": "string",
              "const": "No irreducible factors (empty product)",
              "description": "Factorization of the identity element"
            }
          }
        },
        "inverseElements": {
          "type": "object",
          "properties": {
            "exist": {
              "type": "boolean",
              "const": false,
              "description": "Whether multiplicative inverses exist for all non-zero polynomials"
            },
            "domain": {
              "type": "string",
              "const": "Only constant polynomials have multiplicative inverses in F[x]; inverses for non-constant polynomials exist in the field of rational functions F(x)",
              "description": "Domain where inverses exist"
            }
          }
        },
        "distributivity": {
          "type": "object",
          "properties": {
            "distributesWith": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Operations polynomial multiplication distributes with"
              },
              "default": ["addition", "subtraction"]
            },
            "examples": {
              "type": "array",
              "items": {
                "type": "string",
                "description": "Examples of distributivity"
              },
              "default": [
                "f(x) × (g(x) + h(x)) = (f(x) × g(x)) + (f(x) × h(x))",
                "f(x) × (g(x) - h(x)) = (f(x) × g(x)) - (f(x) × h(x))"
              ]
            }
          }
        },
        "degreeProperty": {
          "type": "string",
          "const": "For non-zero polynomials f(x) and g(x), degree(f(x) × g(x)) = degree(f(x)) + degree(g(x))",
          "description": "Property relating to polynomial degrees"
        }
      }
    },
    "algorithmImplementation": {
      "type": "object",
      "description": "Implementation of polynomial multiplication as an algorithm",
      "properties": {
        "standardAlgorithm": {
          "type": "object",
          "properties": {
            "name": {
              "type": "string",
              "const": "Coefficient-wise multiplication (schoolbook method)",
              "description": "Name of the standard algorithm"
            },
            "pseudocode": {
              "type": "string",
              "const": "function multiply_polynomials(f, g):\n  // f and g are arrays of coefficients [a₀, a₁, ..., aₙ]\n  n = length(f) - 1\n  m = length(g) - 1\n  result = array of zeros of length (n+m+1)\n  \n  for i = 0 to n:\n    for j = 0 to m:\n      result[i+j] += f[i] * g[j]\n  \n  return result",
              "description": "Pseudocode for the standard algorithm"
            },
            "complexity": {
              "type": "object",
              "properties": {
                "time": {
                  "type": "string",
                  "const": "O(nm) for polynomials of degrees n and m",
                  "description": "Time complexity"
                },
                "space": {
                  "type": "string",
                  "const": "O(n+m) for the result polynomial",
                  "description": "Space complexity"
                }
              }
            }
          }
        },
        "advancedAlgorithms": {
          "type": "array",
          "description": "Advanced algorithms for polynomial multiplication",
          "items": {
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Name of the algorithm"
              },
              "description": {
                "type": "string",
                "description": "Description of the algorithm"
              },
              "complexity": {
                "type": "string",
                "description": "Complexity of the algorithm"
              }
            }
          },
          "default": [
            {
              "name": "Karatsuba Algorithm",
              "description": "Divide-and-conquer algorithm reducing the number of multiplications",
              "complexity": "O(n^log₂3) ≈ O(n^1.585)"
            },
            {
              "name": "Fast Fourier Transform (FFT)",
              "description": "Uses FFT to perform multiplication via convolution theorem",
              "complexity": "O(n log n) for polynomials of degree n"
            },
            {
              "name": "Schönhage-Strassen Algorithm",
              "description": "Uses FFT with modular arithmetic for very large polynomials",
              "complexity": "O(n log n log log n)"
            }
          ]
        },
        "factorizationAlgorithm": {
          "type": "object",
          "properties": {
            "description": {
              "type": "string",
              "const": "When using factorization, polynomial multiplication reduces to combining factors and adding exponents",
              "description": "Description of the factorization-based approach"
            },
            "pseudocode": {
              "type": "string",
              "const": "function multiply_using_factorization(f, g):\n  // Assuming f and g are already factorized\n  // f = {constant: c₁, factors: [(p₁, e₁), (p₂, e₂), ...]}\n  // g = {constant: c₂, factors: [(q₁, f₁), (q₂, f₂), ...]}\n  \n  result_constant = f.constant * g.constant\n  result_factors = {}\n  \n  // Combine all factors from f\n  for (factor, exponent) in f.factors:\n    result_factors[factor] = exponent\n  \n  // Add factors from g, adding exponents for common factors\n  for (factor, exponent) in g.factors:\n    if factor in result_factors:\n      result_factors[factor] += exponent\n    else:\n      result_factors[factor] = exponent\n  \n  return {constant: result_constant, factors: result_factors}",
              "description": "Pseudocode for multiplication using factorization"
            },
            "considerations": {
              "type": "string",
              "const": "Factorization-based multiplication is efficient for repeated operations but requires an initial factorization step which can be costly",
              "description": "Practical considerations for the factorization approach"
            }
          }
        }
      }
    },
    "observerFrameViews": {
      "type": "array",
      "description": "Views of polynomial multiplication from different observer frames",
      "items": {
        "type": "object",
        "required": ["frameName", "interpretation"],
        "properties": {
          "frameName": {
            "type": "string",
            "description": "Name of the observer frame"
          },
          "interpretation": {
            "type": "string",
            "description": "Interpretation of multiplication in this frame"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Examples of multiplication in this frame"
            }
          }
        }
      },
      "default": [
        {
          "frameName": "Coefficient-List",
          "interpretation": "Multiplication as convolution of coefficient sequences",
          "examples": [
            "Multiplying (1 + 2x) and (3 + 4x) corresponds to convolving [1,2] with [3,4] to get [3,10,8]"
          ]
        },
        {
          "frameName": "Factorization",
          "interpretation": "Multiplication as combining irreducible factors with exponent addition",
          "examples": [
            "(x-1)(x+1) × (x²+1) = (x-1)(x+1)(x²+1), combining all irreducible factors"
          ]
        },
        {
          "frameName": "Evaluation",
          "interpretation": "Multiplication as pointwise multiplication of functions",
          "examples": [
            "If f(2) = 5 and g(2) = 3, then (f×g)(2) = 15"
          ]
        },
        {
          "frameName": "Algebraic",
          "interpretation": "Multiplication as composition in the polynomial ring structure",
          "examples": [
            "Viewing polynomials as elements of the ring F[x] with standard algebraic operations"
          ]
        }
      ]
    }
  }
}
