{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor.foundation/schemas/algebra/rings/ring-homomorphism.json",
  "title": "Ring Homomorphism Schema",
  "description": "Schema defining structure-preserving maps between rings within the UOR framework",
  "type": "object",
  "required": ["id", "type", "sourceDomain", "targetDomain", "mappingDefinition", "homomorphismProperties"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the ring homomorphism"
    },
    "type": {
      "type": "string",
      "const": "RingHomomorphism",
      "description": "Type of the mathematical entity"
    },
    "name": {
      "type": "string",
      "description": "Name of the homomorphism"
    },
    "description": {
      "type": "string",
      "description": "Detailed description of the homomorphism"
    },
    "sourceDomain": {
      "type": "string",
      "format": "uri",
      "description": "Reference to the source ring domain"
    },
    "targetDomain": {
      "type": "string",
      "format": "uri",
      "description": "Reference to the target ring domain"
    },
    "mappingDefinition": {
      "type": "object",
      "required": ["description", "additivePreservation", "multiplicativePreservation"],
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of how the mapping is defined"
        },
        "formalDefinition": {
          "type": "string",
          "description": "Formal mathematical definition of the homomorphism"
        },
        "additivePreservation": {
          "type": "object",
          "required": ["preserves", "formula"],
          "properties": {
            "preserves": {
              "type": "boolean",
              "description": "Whether the mapping preserves addition"
            },
            "formula": {
              "type": "string",
              "description": "Formula showing additive preservation: φ(a + b) = φ(a) + φ(b)"
            }
          },
          "description": "Properties related to preservation of addition"
        },
        "multiplicativePreservation": {
          "type": "object",
          "required": ["preserves", "formula"],
          "properties": {
            "preserves": {
              "type": "boolean",
              "description": "Whether the mapping preserves multiplication"
            },
            "formula": {
              "type": "string",
              "description": "Formula showing multiplicative preservation: φ(a × b) = φ(a) × φ(b)"
            }
          },
          "description": "Properties related to preservation of multiplication"
        },
        "identityPreservation": {
          "type": "object",
          "properties": {
            "preservesAdditiveIdentity": {
              "type": "boolean",
              "description": "Whether the mapping preserves the additive identity (0)"
            },
            "preservesMultiplicativeIdentity": {
              "type": "boolean",
              "description": "Whether the mapping preserves the multiplicative identity (1)"
            },
            "additiveIdentityFormula": {
              "type": "string",
              "description": "Formula showing preservation of 0: φ(0) = 0"
            },
            "multiplicativeIdentityFormula": {
              "type": "string",
              "description": "Formula showing preservation of 1: φ(1) = 1"
            }
          },
          "description": "Properties related to preservation of identity elements"
        },
        "representationMapping": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["sourceElement", "targetElement"],
            "properties": {
              "sourceElement": {
                "type": "string",
                "description": "Source element representation"
              },
              "targetElement": {
                "type": "string",
                "description": "Target element representation"
              },
              "sourceId": {
                "type": "string",
                "format": "uri",
                "description": "Reference to source element entity"
              },
              "targetId": {
                "type": "string",
                "format": "uri",
                "description": "Reference to target element entity"
              }
            }
          },
          "description": "Mapping between representations"
        },
        "generatorMapping": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["sourceGenerator", "targetElement"],
            "properties": {
              "sourceGenerator": {
                "type": "string",
                "description": "Source ring generator"
              },
              "targetElement": {
                "type": "string",
                "description": "Target element representation"
              }
            }
          },
          "description": "Mapping of generators (sufficient to define the homomorphism)"
        },
        "computationalRule": {
          "type": "string",
          "description": "Algorithm or rule for computing the mapping"
        }
      }
    },
    "homomorphismProperties": {
      "type": "object",
      "required": ["isInjective", "isSurjective", "preservesUnits"],
      "properties": {
        "isInjective": {
          "type": "boolean",
          "description": "Whether the homomorphism is injective (one-to-one)"
        },
        "isSurjective": {
          "type": "boolean",
          "description": "Whether the homomorphism is surjective (onto)"
        },
        "isBijective": {
          "type": "boolean",
          "description": "Whether the homomorphism is bijective (isomorphism)"
        },
        "isIsomorphism": {
          "type": "boolean",
          "description": "Whether the homomorphism is an isomorphism (bijective homomorphism)"
        },
        "isEndomorphism": {
          "type": "boolean",
          "description": "Whether the homomorphism maps a ring to itself"
        },
        "isAutomorphism": {
          "type": "boolean",
          "description": "Whether the homomorphism is an automorphism (bijection from a ring to itself)"
        },
        "isLocalHomomorphism": {
          "type": "boolean",
          "description": "Whether the homomorphism maps maximal ideals to maximal ideals"
        },
        "preservesUnits": {
          "type": "boolean",
          "description": "Whether the homomorphism preserves units (invertible elements)"
        },
        "preservesIrreducibles": {
          "type": "boolean",
          "description": "Whether the homomorphism preserves irreducible elements"
        },
        "preservesPrimes": {
          "type": "boolean",
          "description": "Whether the homomorphism preserves prime elements"
        },
        "preservesStructure": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "addition",
              "multiplication",
              "additive-identity",
              "multiplicative-identity",
              "ideals",
              "prime-ideals",
              "maximal-ideals",
              "factorization",
              "nilpotent-elements",
              "idempotent-elements"
            ]
          },
          "description": "Structures preserved by the homomorphism"
        }
      }
    },
    "kernel": {
      "type": "object",
      "description": "The kernel of the homomorphism",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the kernel"
        },
        "generators": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Generators of the kernel (as an ideal)"
        },
        "isPrincipal": {
          "type": "boolean",
          "description": "Whether the kernel is a principal ideal"
        },
        "isPrime": {
          "type": "boolean",
          "description": "Whether the kernel is a prime ideal"
        },
        "isMaximal": {
          "type": "boolean",
          "description": "Whether the kernel is a maximal ideal"
        },
        "isomorphicQuotient": {
          "type": "string",
          "description": "What the quotient Ring(R)/Kernel is isomorphic to"
        }
      }
    },
    "image": {
      "type": "object",
      "description": "The image of the homomorphism",
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the image"
        },
        "generators": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Generators of the image"
        },
        "isSubring": {
          "type": "boolean",
          "description": "Whether the image is a subring of the target"
        },
        "isIdeal": {
          "type": "boolean",
          "description": "Whether the image is an ideal in the target ring"
        },
        "isomorphicTo": {
          "type": "string",
          "description": "Ring the image is isomorphic to (if known)"
        }
      }
    },
    "firstIsomorphismTheorem": {
      "type": "object",
      "description": "Application of the First Isomorphism Theorem for Rings",
      "properties": {
        "quotientRing": {
          "type": "string",
          "description": "Description of R/ker(φ)"
        },
        "isomorphism": {
          "type": "string",
          "description": "Description of the isomorphism R/ker(φ) ≅ im(φ)"
        },
        "proof": {
          "type": "string",
          "description": "Reference to proof of the isomorphism"
        }
      }
    },
    "idealPreimages": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "targetIdeal": {
            "type": "string",
            "description": "Description of an ideal in the target ring"
          },
          "preimage": {
            "type": "string",
            "description": "Description of the preimage of the ideal"
          },
          "isIdeal": {
            "type": "boolean",
            "description": "Whether the preimage is an ideal in the source ring"
          }
        }
      },
      "description": "Preimages of ideals under the homomorphism"
    },
    "primeCoordinateMapping": {
      "type": "object",
      "description": "How the homomorphism acts on prime coordinates",
      "properties": {
        "mappingType": {
          "type": "string",
          "enum": [
            "direct-mapping",
            "prime-to-prime",
            "prime-to-composite",
            "coordinate-transformation",
            "complex-mapping"
          ],
          "description": "Type of mapping in prime coordinate space"
        },
        "description": {
          "type": "string",
          "description": "Description of how prime coordinates are transformed"
        },
        "formula": {
          "type": "string",
          "description": "Formula for the coordinate transformation"
        },
        "matrix": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": ["number", "string"]
            }
          },
          "description": "Matrix representation of the coordinate transformation (if applicable)"
        }
      }
    },
    "computationalAspects": {
      "type": "object",
      "description": "Computational aspects of the homomorphism",
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Algorithm for computing the homomorphism"
        },
        "timeComplexity": {
          "type": "string",
          "description": "Time complexity of computing the mapping"
        },
        "spaceComplexity": {
          "type": "string",
          "description": "Space complexity of storing the mapping"
        },
        "inverseComputation": {
          "type": "string",
          "description": "Method for computing preimages (if applicable)"
        }
      }
    },
    "compositionProperties": {
      "type": "object",
      "description": "Properties related to composition with other homomorphisms",
      "properties": {
        "isComposable": {
          "type": "boolean",
          "description": "Whether this homomorphism can be composed with others"
        },
        "compatibleHomomorphisms": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["homomorphismId", "compositionResult"],
            "properties": {
              "homomorphismId": {
                "type": "string",
                "format": "uri",
                "description": "ID of a compatible homomorphism"
              },
              "compositionOrder": {
                "type": "string",
                "enum": ["before", "after", "commutative"],
                "description": "Order in which composition can occur"
              },
              "compositionResult": {
                "type": "string",
                "format": "uri",
                "description": "ID of the resulting composed homomorphism"
              }
            }
          },
          "description": "List of homomorphisms that can be composed with this one"
        }
      }
    },
    "categoricalProperties": {
      "type": "object",
      "description": "Properties related to the categorical aspects of the homomorphism",
      "properties": {
        "isNatural": {
          "type": "boolean",
          "description": "Whether the homomorphism is natural (part of a natural transformation)"
        },
        "functorContext": {
          "type": "string",
          "description": "Functorial context in which this homomorphism is natural"
        },
        "universalProperty": {
          "type": "string",
          "description": "Universal property related to this homomorphism (if any)"
        },
        "categoricalDiagram": {
          "type": "string",
          "description": "Description of the category-theoretic diagram"
        }
      }
    },
    "coherenceMeasures": {
      "type": "object",
      "description": "Coherence measures for this homomorphism",
      "properties": {
        "structurePreservation": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Measure of structure preservation (1 = perfect)"
        },
        "informationLoss": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Measure of information loss (0 = lossless)"
        },
        "complexityReduction": {
          "type": "number",
          "description": "Measure of complexity reduction achieved by the mapping"
        },
        "cohNorm": {
          "type": "number",
          "description": "UOR coherence norm for the homomorphism"
        }
      }
    },
    "applications": {
      "type": "array",
      "description": "Applications of this homomorphism",
      "items": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Application domain"
          },
          "description": {
            "type": "string",
            "description": "Description of the application"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Examples of applications"
          }
        }
      }
    },
    "theorems": {
      "type": "array",
      "description": "Theorems related to this homomorphism",
      "items": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the theorem"
          },
          "statement": {
            "type": "string",
            "description": "Statement of the theorem"
          },
          "significance": {
            "type": "string",
            "description": "Significance of the theorem for this homomorphism"
          }
        }
      }
    }
  },
  "examples": [
    {
      "id": "urn:uor:algebra:ring:homomorphism:Z-Zn",
      "type": "RingHomomorphism",
      "name": "Natural Projection from Z to Z/nZ",
      "description": "The canonical projection from the ring of integers Z to the modular ring Z/nZ that maps each integer to its residue class modulo n",
      "sourceDomain": "urn:uor:algebra:ring:integers",
      "targetDomain": "urn:uor:algebra:ring:integers-modulo-n",
      "mappingDefinition": {
        "description": "Maps each integer to its residue class modulo n",
        "formalDefinition": "π: Z → Z/nZ defined by π(a) = [a]_n, the residue class of a modulo n",
        "additivePreservation": {
          "preserves": true,
          "formula": "π(a + b) = π(a) + π(b) for all integers a, b"
        },
        "multiplicativePreservation": {
          "preserves": true,
          "formula": "π(a × b) = π(a) × π(b) for all integers a, b"
        },
        "identityPreservation": {
          "preservesAdditiveIdentity": true,
          "preservesMultiplicativeIdentity": true,
          "additiveIdentityFormula": "π(0) = [0]_n",
          "multiplicativeIdentityFormula": "π(1) = [1]_n"
        },
        "representationMapping": [
          {
            "sourceElement": "a",
            "targetElement": "[a]_n",
            "sourceId": "urn:uor:algebra:ring:integers:element:a",
            "targetId": "urn:uor:algebra:ring:integers-modulo-n:element:a-mod-n"
          }
        ],
        "generatorMapping": [
          {
            "sourceGenerator": "1",
            "targetElement": "[1]_n"
          }
        ],
        "computationalRule": "Compute a mod n (the remainder when a is divided by n)"
      },
      "homomorphismProperties": {
        "isInjective": false,
        "isSurjective": true,
        "isBijective": false,
        "isIsomorphism": false,
        "isEndomorphism": false,
        "isAutomorphism": false,
        "isLocalHomomorphism": true,
        "preservesUnits": true,
        "preservesIrreducibles": false,
        "preservesPrimes": false,
        "preservesStructure": [
          "addition",
          "multiplication",
          "additive-identity",
          "multiplicative-identity",
          "ideals"
        ]
      },
      "kernel": {
        "description": "The ideal (n) consisting of all multiples of n",
        "generators": ["n"],
        "isPrincipal": true,
        "isPrime": true,
        "isMaximal": true,
        "isomorphicQuotient": "Z/(n) ≅ Z/nZ"
      },
      "image": {
        "description": "The entire ring Z/nZ",
        "generators": ["[1]_n"],
        "isSubring": true,
        "isIdeal": true,
        "isomorphicTo": "Z/nZ"
      },
      "firstIsomorphismTheorem": {
        "quotientRing": "Z/(n)",
        "isomorphism": "Z/(n) ≅ Z/nZ",
        "proof": "Standard application of the First Isomorphism Theorem for Rings"
      },
      "idealPreimages": [
        {
          "targetIdeal": "[(0)]_n (the zero ideal in Z/nZ)",
          "preimage": "(n) (the ideal of multiples of n in Z)",
          "isIdeal": true
        },
        {
          "targetIdeal": "Z/nZ (the entire target ring)",
          "preimage": "Z (the entire source ring)",
          "isIdeal": true
        }
      ],
      "primeCoordinateMapping": {
        "mappingType": "complex-mapping",
        "description": "Maps each prime p to its residue class [p]_n in Z/nZ",
        "formula": "For prime factorization a = p₁^e₁ × p₂^e₂ × ... × pₖ^eₖ, the mapping computes the product of [p₁]_n^e₁ × [p₂]_n^e₂ × ... × [pₖ]_n^eₖ in Z/nZ",
        "matrix": null
      },
      "computationalAspects": {
        "algorithm": "Compute the remainder when dividing by n",
        "timeComplexity": "O(log a × log n) for division algorithm",
        "spaceComplexity": "O(log n)",
        "inverseComputation": "For an element [a]_n in Z/nZ, the preimage is the coset a + (n) = {a + kn | k ∈ Z}"
      },
      "compositionProperties": {
        "isComposable": true,
        "compatibleHomomorphisms": [
          {
            "homomorphismId": "urn:uor:algebra:ring:homomorphism:Zn-Zm",
            "compositionOrder": "after",
            "compositionResult": "urn:uor:algebra:ring:homomorphism:Z-Zm"
          }
        ]
      },
      "categoricalProperties": {
        "isNatural": true,
        "functorContext": "Forgetful functor from rings to abelian groups",
        "universalProperty": "Z/nZ is the universal ring with the property that n = 0",
        "categoricalDiagram": "Commutative diagram involving Z, Z/nZ, and any ring where n = 0"
      },
      "coherenceMeasures": {
        "structurePreservation": 1.0,
        "informationLoss": 0.5,
        "complexityReduction": 0.8,
        "cohNorm": 0.7
      },
      "applications": [
        {
          "domain": "Number Theory",
          "description": "Foundation for modular arithmetic",
          "examples": [
            "Congruence calculations",
            "Chinese remainder theorem",
            "Solving linear congruences"
          ]
        },
        {
          "domain": "Cryptography",
          "description": "Basis for modular arithmetic in cryptographic protocols",
          "examples": [
            "RSA encryption",
            "Diffie-Hellman key exchange",
            "Digital signatures"
          ]
        }
      ],
      "theorems": [
        {
          "name": "First Isomorphism Theorem for Rings",
          "statement": "If φ: R → S is a ring homomorphism with kernel K, then R/K ≅ im(φ)",
          "significance": "Provides the isomorphism Z/(n) ≅ Z/nZ"
        },
        {
          "name": "Chinese Remainder Theorem",
          "statement": "If n = n₁ × n₂ × ... × nₖ where the nᵢ are pairwise coprime, then Z/nZ ≅ Z/n₁Z × Z/n₂Z × ... × Z/nₖZ",
          "significance": "Allows decomposition of the target ring into a product of simpler rings"
        }
      ]
    }
  ]
}
