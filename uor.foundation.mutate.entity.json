{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor.foundation/mutate.entity",
  "title": "UOR Mutate Entity Schema",
  "description": "Schema defining the structure of mutation entities in the UOR system",
  "type": "object",
  "required": [
    "id",
    "type",
    "properties"
  ],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the mutation entity"
    },
    "type": {
      "type": "string",
      "const": "mutate.entity",
      "description": "The type of entity"
    },
    "properties": {
      "type": "object",
      "description": "Properties specific to mutation entity",
      "required": [
        "targetSchema",
        "mutationOperations"
      ],
      "properties": {
        "targetSchema": {
          "type": "string",
          "format": "uri",
          "description": "URI reference to the schema to be mutated"
        },
        "validationSchema": {
          "type": "string",
          "format": "uri",
          "description": "URI reference to the schema to validate against before mutation"
        },
        "mutationOperations": {
          "type": "array",
          "description": "Operations to perform on the target schema",
          "items": {
            "type": "object",
            "required": [
              "operation",
              "path"
            ],
            "properties": {
              "operation": {
                "type": "string",
                "enum": [
                  "add",
                  "remove",
                  "replace",
                  "move",
                  "copy",
                  "test"
                ],
                "description": "Type of operation to perform (JSON Patch operations)"
              },
              "path": {
                "type": "string",
                "description": "JSON Pointer path to the target location"
              },
              "value": {
                "description": "Value to use for the operation (required for add, replace, test)"
              },
              "from": {
                "type": "string",
                "description": "JSON Pointer path to the source location (required for move, copy)"
              }
            }
          }
        },
        "mutationMode": {
          "type": "string",
          "enum": [
            "atomic",
            "partial"
          ],
          "default": "atomic",
          "description": "Whether all operations must succeed (atomic) or partial success is acceptable"
        },
        "mutationResults": {
          "type": "object",
          "description": "Results of the mutation operation",
          "properties": {
            "success": {
              "type": "boolean",
              "description": "Whether the mutation succeeded"
            },
            "validationPassed": {
              "type": "boolean",
              "description": "Whether validation passed before mutation"
            },
            "errors": {
              "type": "array",
              "description": "Mutation errors if any",
              "items": {
                "type": "object",
                "properties": {
                  "operation": {
                    "type": "integer",
                    "description": "Index of the operation that failed"
                  },
                  "path": {
                    "type": "string",
                    "description": "JSON path where the error occurred"
                  },
                  "message": {
                    "type": "string",
                    "description": "Error message"
                  }
                }
              }
            },
            "resultSchema": {
              "type": "string",
              "format": "uri",
              "description": "URI reference to the resulting schema after mutation"
            }
          }
        }
      }
    },
    "relationships": {
      "type": "array",
      "description": "Relationships to other entities",
      "items": {
        "type": "object",
        "properties": {
          "interfaceId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to the interface defining this relationship"
          },
          "targetEntityId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to the target entity"
          }
        }
      }
    }
  },
  "schemaType": "entity"
}