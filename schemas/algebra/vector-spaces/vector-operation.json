{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor-foundation.org/schemas/algebra/vector-spaces/vector-operation.json",
  "title": "Vector Space Operation Schema",
  "description": "Schema defining operations on vector elements within the UOR framework",
  "@context": {
    "@vocab": "https://schema.org/",
    "uor": "https://uor-foundation.org/schemas/core/"
  },
  "type": "object",
  "required": ["id", "vectorSpaceDomain", "operationType", "operands", "result", "primeMappingDefinition"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the vector operation"
    },
    "vectorSpaceDomain": {
      "type": "string",
      "format": "uri",
      "description": "Reference to the vector space domain for this operation"
    },
    "operationType": {
      "type": "string",
      "enum": [
        "vector-addition",
        "vector-subtraction",
        "scalar-multiplication",
        "inner-product",
        "outer-product",
        "cross-product",
        "projection",
        "tensor-product",
        "linear-combination",
        "linear-transformation"
      ],
      "description": "Type of vector space operation"
    },
    "operands": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "properties": {
          "operandId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to the operand element"
          },
          "operandValue": {
            "type": "string",
            "description": "Value representation of the operand"
          },
          "operandRole": {
            "type": "string",
            "enum": [
              "left-vector",
              "right-vector",
              "scalar",
              "projection-target",
              "projection-direction",
              "linear-operator",
              "operand-vector",
              "coefficient"
            ],
            "description": "Role of this operand in the operation"
          }
        }
      },
      "description": "Operands for this operation"
    },
    "result": {
      "type": "object",
      "required": ["resultType", "resultValue"],
      "properties": {
        "resultId": {
          "type": "string",
          "format": "uri",
          "description": "Reference to the result element"
        },
        "resultValue": {
          "type": "string",
          "description": "Value representation of the result"
        },
        "resultType": {
          "type": "string",
          "enum": [
            "vector",
            "scalar",
            "tensor",
            "matrix",
            "linear-operator"
          ],
          "description": "Type of the result"
        },
        "resultForm": {
          "type": "string",
          "enum": [
            "canonical",
            "normalized",
            "standard",
            "simplified",
            "coordinate"
          ],
          "description": "Form of the result"
        },
        "resultSpace": {
          "type": "string",
          "format": "uri",
          "description": "Reference to the space containing the result"
        }
      },
      "description": "Result of the operation"
    },
    "operationLaws": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "lawName": {
            "type": "string",
            "description": "Name of the law applicable to this operation"
          },
          "lawDescription": {
            "type": "string",
            "description": "Description of the law"
          },
          "lawFormula": {
            "type": "string",
            "description": "Mathematical formula of the law"
          }
        }
      },
      "description": "Mathematical laws applicable to this operation"
    },
    "primeMappingDefinition": {
      "type": "object",
      "required": ["description", "mapping"],
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of how the operation maps in prime coordinates"
        },
        "mapping": {
          "type": "string",
          "description": "Formal definition of the mapping in prime coordinates"
        },
        "operationInCoordinates": {
          "type": "string",
          "description": "How the operation is performed directly in prime coordinates"
        },
        "coherenceMeasure": {
          "type": "string",
          "description": "Coherence measure of this mapping"
        }
      },
      "description": "Definition of how this operation maps to prime coordinates"
    },
    "computationalAspects": {
      "type": "object",
      "properties": {
        "algorithm": {
          "type": "string",
          "description": "Algorithm used to compute this operation"
        },
        "complexity": {
          "type": "string",
          "description": "Computational complexity of this operation"
        },
        "precisionIssues": {
          "type": "string",
          "description": "Precision or numerical issues relevant to this operation"
        },
        "optimizations": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Possible optimizations for this operation"
        }
      },
      "description": "Computational aspects of this operation"
    },
    "algebraicProperties": {
      "type": "object",
      "properties": {
        "linearity": {
          "type": "object",
          "properties": {
            "isLinearInFirstArgument": {
              "type": "boolean",
              "description": "Whether the operation is linear in its first argument"
            },
            "isLinearInSecondArgument": {
              "type": "boolean",
              "description": "Whether the operation is linear in its second argument"
            },
            "linearityEquations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Equations expressing the linearity properties"
            }
          },
          "description": "Linearity properties of the operation"
        },
        "distributivity": {
          "type": "object",
          "properties": {
            "distributesWith": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Operations this operation distributes with"
            },
            "distributivityEquations": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "description": "Equations expressing the distributivity properties"
            }
          },
          "description": "Distributivity properties of the operation"
        },
        "associativity": {
          "type": "object",
          "properties": {
            "isAssociative": {
              "type": "boolean",
              "description": "Whether the operation is associative"
            },
            "associativityEquation": {
              "type": "string",
              "description": "Equation expressing the associativity property"
            }
          },
          "description": "Associativity properties of the operation"
        },
        "commutativity": {
          "type": "object",
          "properties": {
            "isCommutative": {
              "type": "boolean",
              "description": "Whether the operation is commutative"
            },
            "commutativityEquation": {
              "type": "string",
              "description": "Equation expressing the commutativity property"
            }
          },
          "description": "Commutativity properties of the operation"
        }
      },
      "description": "Algebraic properties of the operation"
    },
    "geometricInterpretation": {
      "type": "object",
      "properties": {
        "interpretation": {
          "type": "string",
          "description": "Geometric interpretation of the operation"
        },
        "visualization": {
          "type": "string",
          "description": "How the operation can be visualized"
        },
        "properties": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Geometric properties of the operation"
        }
      },
      "description": "Geometric interpretation of the operation"
    },
    "observerFrames": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "frameId": {
            "type": "string",
            "format": "uri",
            "description": "Reference to the observer frame"
          },
          "operationDescription": {
            "type": "string",
            "description": "Description of the operation in this frame"
          },
          "operationImplementation": {
            "type": "string",
            "description": "Implementation of the operation in this frame"
          },
          "frameInvariance": {
            "type": "string",
            "description": "Description of how the operation behaves under frame changes"
          }
        }
      },
      "description": "How this operation appears in different observer frames"
    },
    "extendedProperties": {
      "type": "object",
      "properties": {
        "isIdempotent": {
          "type": "boolean",
          "description": "Whether the operation is idempotent (a op a = a)"
        },
        "isInvolutory": {
          "type": "boolean",
          "description": "Whether the operation is involutory (doing it twice returns the original)"
        },
        "preservesProperty": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Properties preserved by this operation"
        },
        "specialCases": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "type": "string",
                "description": "Description of the special case"
              },
              "condition": {
                "type": "string",
                "description": "Condition for the special case"
              },
              "result": {
                "type": "string",
                "description": "Result in the special case"
              }
            }
          },
          "description": "Special cases for this operation"
        }
      },
      "description": "Extended properties of this operation"
    },
    "functionalProperties": {
      "type": "object",
      "properties": {
        "domain": {
          "type": "string",
          "description": "Domain of the operation as a function"
        },
        "codomain": {
          "type": "string",
          "description": "Codomain of the operation as a function"
        },
        "kernel": {
          "type": "string",
          "description": "Kernel of the operation (if applicable)"
        },
        "image": {
          "type": "string",
          "description": "Image of the operation (if applicable)"
        },
        "rank": {
          "type": "string",
          "description": "Rank of the operation (if applicable)"
        },
        "nullity": {
          "type": "string",
          "description": "Nullity of the operation (if applicable)"
        }
      },
      "description": "Functional properties of the operation"
    },
    "applications": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "domain": {
            "type": "string",
            "description": "Application domain"
          },
          "description": {
            "type": "string",
            "description": "Description of the application"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Examples of applications"
          }
        }
      },
      "description": "Applications of this operation"
    }
  },
  "examples": [
    {
      "id": "urn:uor:algebra:vector-space:real-euclidean:operation:vector-addition-example",
      "vectorSpaceDomain": "urn:uor:algebra:vector-space:real-euclidean",
      "operationType": "vector-addition",
      "operands": [
        {
          "operandId": "urn:uor:algebra:vector-space:real-euclidean:element:unit-x",
          "operandValue": "(1, 0, 0)",
          "operandRole": "left-vector"
        },
        {
          "operandId": "urn:uor:algebra:vector-space:real-euclidean:element:unit-y",
          "operandValue": "(0, 1, 0)",
          "operandRole": "right-vector"
        }
      ],
      "result": {
        "resultId": "urn:uor:algebra:vector-space:real-euclidean:element:unit-xy",
        "resultValue": "(1, 1, 0)",
        "resultType": "vector",
        "resultForm": "coordinate",
        "resultSpace": "urn:uor:algebra:vector-space:real-euclidean"
      },
      "operationLaws": [
        {
          "lawName": "Commutative Law",
          "lawDescription": "Vector addition is commutative",
          "lawFormula": "u + v = v + u"
        },
        {
          "lawName": "Associative Law",
          "lawDescription": "Vector addition is associative",
          "lawFormula": "(u + v) + w = u + (v + w)"
        },
        {
          "lawName": "Identity Law",
          "lawDescription": "The zero vector is the identity for addition",
          "lawFormula": "v + 0 = v"
        },
        {
          "lawName": "Inverse Law",
          "lawDescription": "Every vector has an additive inverse",
          "lawFormula": "v + (-v) = 0"
        }
      ],
      "primeMappingDefinition": {
        "description": "Vector addition in prime coordinates is performed component-wise with respect to the basis",
        "mapping": "If u = Σ u_i e_i and v = Σ v_i e_i, then u + v = Σ (u_i + v_i) e_i",
        "operationInCoordinates": "For vectors in basis representation, add the corresponding coefficients for each basis vector",
        "coherenceMeasure": "Preserves sparsity pattern - only coordinates present in either operand can be non-zero in the result"
      },
      "computationalAspects": {
        "algorithm": "Component-wise addition: For each index i, compute result[i] = left[i] + right[i]",
        "complexity": "O(n) where n is the dimension of the vector space",
        "precisionIssues": "Subject to floating-point addition errors when using approximations of real numbers",
        "optimizations": [
          "Vectorized operations for efficient computation",
          "Sparse representation if many components are zero",
          "Parallel computation for high-dimensional vectors"
        ]
      },
      "algebraicProperties": {
        "linearity": {
          "isLinearInFirstArgument": true,
          "isLinearInSecondArgument": true,
          "linearityEquations": [
            "α(u + v) = αu + αv (linear in first argument)",
            "(α + β)v = αv + βv (linear in second argument)"
          ]
        },
        "distributivity": {
          "distributesWith": [
            "scalar multiplication"
          ],
          "distributivityEquations": [
            "α(u + v) = αu + αv"
          ]
        },
        "associativity": {
          "isAssociative": true,
          "associativityEquation": "(u + v) + w = u + (v + w)"
        },
        "commutativity": {
          "isCommutative": true,
          "commutativityEquation": "u + v = v + u"
        }
      },
      "geometricInterpretation": {
        "interpretation": "The parallelogram rule - adding vectors corresponds to placing the tail of the second vector at the head of the first vector",
        "visualization": "Head-to-tail method for vector addition, or the diagonal of a parallelogram formed by the two vectors",
        "properties": [
          "direction-preserving for parallel vectors",
          "magnitude-increasing for non-opposing vectors",
          "displacement-combining"
        ]
      },
      "observerFrames": [
        {
          "frameId": "urn:uor:algebra:vector-space:observer-frame:standard-basis",
          "operationDescription": "Standard component-wise addition in Cartesian coordinates",
          "operationImplementation": "(x₁, y₁, z₁) + (x₂, y₂, z₂) = (x₁+x₂, y₁+y₂, z₁+z₂)",
          "frameInvariance": "Vector addition is invariant under changes of basis - the result is the same regardless of the chosen basis"
        },
        {
          "frameId": "urn:uor:algebra:vector-space:observer-frame:polar-coordinates",
          "operationDescription": "Addition in polar coordinates requires conversion to Cartesian, addition, then conversion back",
          "operationImplementation": "Convert to Cartesian, add, then convert back to polar",
          "frameInvariance": "While the operation itself is invariant, the representation of the result depends on the coordinate system"
        }
      ],
      "extendedProperties": {
        "isIdempotent": false,
        "isInvolutory": false,
        "preservesProperty": [
          "linearity",
          "vector-space-structure",
          "subspace-membership"
        ],
        "specialCases": [
          {
            "description": "Addition with the zero vector",
            "condition": "One operand is the zero vector",
            "result": "The other operand (identity property)"
          },
          {
            "description": "Addition with the additive inverse",
            "condition": "u + (-u)",
            "result": "The zero vector (inverse property)"
          },
          {
            "description": "Addition of parallel vectors",
            "condition": "Vectors pointing in the same direction",
            "result": "A vector in the same direction with summed magnitudes"
          }
        ]
      },
      "functionalProperties": {
        "domain": "V × V (pairs of vectors from space V)",
        "codomain": "V (the same vector space)",
        "kernel": "Not applicable (not a linear map in the standard sense)",
        "image": "The entire vector space V",
        "rank": "Not applicable",
        "nullity": "Not applicable"
      },
      "applications": [
        {
          "domain": "Physics",
          "description": "Combining multiple forces, velocities, or displacements",
          "examples": [
            "Adding force vectors to find resultant force",
            "Combining displacement vectors to find net displacement",
            "Vector addition of velocities in classical mechanics"
          ]
        },
        {
          "domain": "Computer Graphics",
          "description": "Manipulating points, directions, and transformations",
          "examples": [
            "Translating objects by adding displacement vectors",
            "Combining multiple transformations",
            "Calculating midpoints and interpolation"
          ]
        },
        {
          "domain": "Signal Processing",
          "description": "Combining signals represented as vectors",
          "examples": [
            "Superposition of signals",
            "Noise cancellation by adding inverse signals",
            "Signal averaging and enhancement"
          ]
        }
      ]
    },
    {
      "id": "urn:uor:algebra:vector-space:real-euclidean:operation:inner-product-example",
      "vectorSpaceDomain": "urn:uor:algebra:vector-space:real-euclidean",
      "operationType": "inner-product",
      "operands": [
        {
          "operandId": "urn:uor:algebra:vector-space:real-euclidean:element:unit-x",
          "operandValue": "(1, 0, 0)",
          "operandRole": "left-vector"
        },
        {
          "operandId": "urn:uor:algebra:vector-space:real-euclidean:element:unit-y",
          "operandValue": "(0, 1, 0)",
          "operandRole": "right-vector"
        }
      ],
      "result": {
        "resultId": "urn:uor:algebra:vector-space:real-euclidean:scalar:zero",
        "resultValue": "0",
        "resultType": "scalar",
        "resultForm": "scalar",
        "resultSpace": "urn:uor:algebra:field:real-numbers"
      },
      "operationLaws": [
        {
          "lawName": "Linearity in First Argument",
          "lawDescription": "Inner product is linear in its first argument",
          "lawFormula": "⟨αu + βv, w⟩ = α⟨u, w⟩ + β⟨v, w⟩"
        },
        {
          "lawName": "Conjugate Symmetry",
          "lawDescription": "For real vector spaces, inner product is symmetric",
          "lawFormula": "⟨u, v⟩ = ⟨v, u⟩"
        },
        {
          "lawName": "Positive Definiteness",
          "lawDescription": "Inner product of a vector with itself is positive unless the vector is zero",
          "lawFormula": "⟨v, v⟩ ≥ 0, and ⟨v, v⟩ = 0 if and only if v = 0"
        }
      ],
      "primeMappingDefinition": {
        "description": "Inner product in prime coordinates maps to a sum of products of corresponding coordinates",
        "mapping": "If u = Σ u_i e_i and v = Σ v_i e_i with orthonormal basis {e_i}, then ⟨u, v⟩ = Σ u_i v_i",
        "operationInCoordinates": "With orthonormal basis, multiply corresponding coordinates and sum; with general basis, use the Gram matrix",
        "coherenceMeasure": "Preserves orthogonality relationships between prime elements"
      },
      "computationalAspects": {
        "algorithm": "Sum of products: result = sum(left[i] * right[i] for all i)",
        "complexity": "O(n) where n is the dimension of the vector space",
        "precisionIssues": "Susceptible to overflow in intermediate products and catastrophic cancellation",
        "optimizations": [
          "Vectorized dot product operations",
          "Reordering summation for better numerical stability",
          "Early termination if one vector has many zeros"
        ]
      },
      "algebraicProperties": {
        "linearity": {
          "isLinearInFirstArgument": true,
          "isLinearInSecondArgument": true,
          "linearityEquations": [
            "⟨αu + βv, w⟩ = α⟨u, w⟩ + β⟨v, w⟩",
            "⟨u, αv + βw⟩ = α⟨u, v⟩ + β⟨u, w⟩"
          ]
        },
        "distributivity": {
          "distributesWith": [
            "vector addition"
          ],
          "distributivityEquations": [
            "⟨u, v + w⟩ = ⟨u, v⟩ + ⟨u, w⟩",
            "⟨u + v, w⟩ = ⟨u, w⟩ + ⟨v, w⟩"
          ]
        },
        "associativity": {
          "isAssociative": false,
          "associativityEquation": "Not applicable (binary operation with different types of outputs)"
        },
        "commutativity": {
          "isCommutative": true,
          "commutativityEquation": "⟨u, v⟩ = ⟨v, u⟩ (for real inner product)"
        }
      },
      "geometricInterpretation": {
        "interpretation": "Product of vector magnitudes and the cosine of the angle between them",
        "visualization": "Projection of one vector onto the other, multiplied by the magnitude of the other",
        "properties": [
          "zero for perpendicular vectors",
          "positive for vectors with angle < 90°",
          "negative for vectors with angle > 90°",
          "maximum when vectors are parallel"
        ]
      },
      "observerFrames": [
        {
          "frameId": "urn:uor:algebra:vector-space:observer-frame:standard-basis",
          "operationDescription": "Sum of products of corresponding components in the standard basis",
          "operationImplementation": "⟨(x₁, y₁, z₁), (x₂, y₂, z₂)⟩ = x₁x₂ + y₁y₂ + z₁z₂",
          "frameInvariance": "Inner product is invariant under orthogonal changes of basis"
        },
        {
          "frameId": "urn:uor:algebra:vector-space:observer-frame:general-basis",
          "operationDescription": "Computation using the Gram matrix of the basis",
          "operationImplementation": "⟨u, v⟩ = u^T G v where G is the Gram matrix [⟨e_i, e_j⟩]",
          "frameInvariance": "The inner product value is invariant, but the computation method changes with the basis"
        }
      ],
      "extendedProperties": {
        "isIdempotent": false,
        "isInvolutory": false,
        "preservesProperty": [
          "orthogonality",
          "angle-relationships",
          "metric-structure"
        ],
        "specialCases": [
          {
            "description": "Inner product with zero vector",
            "condition": "One operand is the zero vector",
            "result": "Zero"
          },
          {
            "description": "Inner product of a vector with itself",
            "condition": "Both operands are the same vector v",
            "result": "Square of the Euclidean norm: ||v||²"
          },
          {
            "description": "Inner product of orthogonal vectors",
            "condition": "Vectors are perpendicular to each other",
            "result": "Zero"
          }
        ]
      },
      "functionalProperties": {
        "domain": "V × V (pairs of vectors from space V)",
        "codomain": "R (the field of real numbers)",
        "kernel": "For fixed non-zero u, {v | ⟨u, v⟩ = 0} is the orthogonal complement of the span of u",
        "image": "R (the entire field of real numbers)",
        "rank": "1 (for fixed non-zero vector)",
        "nullity": "n-1 where n is the dimension (for fixed non-zero vector)"
      },
      "applications": [
        {
          "domain": "Physics",
          "description": "Calculating work, energy, and projections",
          "examples": [
            "Work done by a force: W = F·d",
            "Projecting a vector onto a direction",
            "Energy calculations in various contexts"
          ]
        },
        {
          "domain": "Machine Learning",
          "description": "Measuring similarity and computing projections",
          "examples": [
            "Cosine similarity between feature vectors",
            "Projection in regression problems",
            "Kernel methods using inner products"
          ]
        },
        {
          "domain": "Signal Processing",
          "description": "Correlation and filtering operations",
          "examples": [
            "Signal correlation measurement",
            "Matched filtering",
            "Frequency analysis through inner products with basis functions"
          ]
        }
      ]
    }
  ]
}