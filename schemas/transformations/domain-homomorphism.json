{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://uor-foundation.org/schemas/transformations/domain-homomorphism.json",
  "title": "Domain Homomorphism Schema",
  "description": "Schema defining structure-preserving maps between different domain manifolds",
  "@context": {
    "@vocab": "https://schema.org/",
    "uor": "https://uor-foundation.org/schemas/core/"
  },
  "type": "object",
  "required": ["id", "type", "sourceDomain", "targetDomain", "preservedStructures"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uri",
      "description": "Unique identifier for the domain homomorphism"
    },
    "type": {
      "type": "string",
      "const": "DomainHomomorphism",
      "description": "Type of the UOR object"
    },
    "sourceDomain": {
      "type": "string",
      "format": "uri",
      "description": "Reference to the source domain"
    },
    "targetDomain": {
      "type": "string",
      "format": "uri",
      "description": "Reference to the target domain"
    },
    "preservedStructures": {
      "type": "array",
      "minItems": 1,
      "items": {
        "type": "object",
        "required": ["structureType", "mappingDescription"],
        "properties": {
          "structureType": {
            "type": "string",
            "enum": ["algebraic", "topological", "order", "metric", "composite"],
            "description": "Type of mathematical structure being preserved"
          },
          "mappingDescription": {
            "type": "string",
            "description": "Description of how the structure is preserved through mapping"
          },
          "formalDefinition": {
            "type": "string",
            "description": "Formal mathematical definition of the structure preservation"
          },
          "exampleMapping": {
            "type": "object",
            "properties": {
              "sourceElement": {
                "type": ["string", "object"],
                "description": "Example element from source domain"
              },
              "targetElement": {
                "type": ["string", "object"],
                "description": "Corresponding element in target domain"
              },
              "verificationMethod": {
                "type": "string",
                "description": "Method to verify the structure preservation in this example"
              }
            },
            "description": "Example demonstrating the structure preservation"
          }
        }
      },
      "description": "Structures that are preserved by this homomorphism"
    },
    "mappingFunction": {
      "type": "object",
      "required": ["description", "direction"],
      "properties": {
        "description": {
          "type": "string",
          "description": "Description of the mapping function"
        },
        "direction": {
          "type": "string",
          "enum": ["one-way", "bijective", "surjective", "injective"],
          "description": "Directionality of the mapping function"
        },
        "implementation": {
          "type": "string",
          "description": "Implementation details of the mapping function"
        },
        "complexityClass": {
          "type": "string",
          "description": "Computational complexity class of the mapping function"
        },
        "inverseFunction": {
          "type": "object",
          "properties": {
            "exists": {
              "type": "boolean",
              "description": "Whether an inverse function exists"
            },
            "description": {
              "type": "string",
              "description": "Description of the inverse function if it exists"
            },
            "implementation": {
              "type": "string",
              "description": "Implementation details of the inverse function"
            }
          },
          "description": "Information about the inverse function, if applicable"
        }
      },
      "description": "Function that implements the homomorphic mapping"
    },
    "domainConstraints": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["domain", "constraint"],
        "properties": {
          "domain": {
            "type": "string",
            "enum": ["source", "target"],
            "description": "Whether the constraint applies to source or target domain"
          },
          "constraint": {
            "type": "string",
            "description": "Description of the constraint"
          },
          "rationale": {
            "type": "string",
            "description": "Rationale for why this constraint is necessary"
          }
        }
      },
      "description": "Constraints that must be satisfied in the domains for the homomorphism to be valid"
    },
    "compositionProperties": {
      "type": "object",
      "properties": {
        "isComposable": {
          "type": "boolean",
          "description": "Whether this homomorphism can be composed with others"
        },
        "compatibleHomomorphisms": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["homomorphismId", "compositionResult"],
            "properties": {
              "homomorphismId": {
                "type": "string",
                "format": "uri",
                "description": "ID of a compatible homomorphism"
              },
              "compositionOrder": {
                "type": "string",
                "enum": ["before", "after", "commutative"],
                "description": "Order in which composition can occur"
              },
              "compositionResult": {
                "type": "string",
                "format": "uri",
                "description": "ID of the resulting composed homomorphism"
              }
            }
          },
          "description": "List of homomorphisms that can be composed with this one"
        },
        "compositionProperties": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": ["associative", "identity-preserving", "structure-preserving"],
            "description": "Properties of the composition operation with this homomorphism"
          }
        }
      },
      "description": "Properties related to composition of homomorphisms"
    },
    "kernelProperties": {
      "type": "object",
      "properties": {
        "kernelDescription": {
          "type": "string",
          "description": "Description of the kernel of this homomorphism"
        },
        "isKernelTrivial": {
          "type": "boolean",
          "description": "Whether the kernel is trivial (contains only identity)"
        },
        "kernelStructure": {
          "type": "string",
          "description": "Mathematical structure of the kernel"
        }
      },
      "description": "Properties related to the kernel of the homomorphism"
    },
    "imageProperties": {
      "type": "object",
      "properties": {
        "imageDescription": {
          "type": "string",
          "description": "Description of the image of this homomorphism"
        },
        "isSurjective": {
          "type": "boolean",
          "description": "Whether the homomorphism is surjective (image = target domain)"
        },
        "imageStructure": {
          "type": "string",
          "description": "Mathematical structure of the image"
        }
      },
      "description": "Properties related to the image of the homomorphism"
    },
    "applications": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "description"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the application"
          },
          "description": {
            "type": "string",
            "description": "Description of how this homomorphism enables the application"
          },
          "examples": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "Examples of the application in use"
          }
        }
      },
      "description": "Applications enabled by this homomorphism"
    },
    "coherenceMeasures": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["type", "value"],
        "properties": {
          "type": {
            "type": "string",
            "description": "Type of coherence measure"
          },
          "value": {
            "type": "number",
            "description": "Value of the coherence measure"
          },
          "interpretation": {
            "type": "string",
            "description": "Interpretation of the coherence measure value"
          }
        }
      },
      "description": "Measures of coherence for this homomorphism"
    },
    "relatedHomomorphisms": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["homomorphismId", "relationship"],
        "properties": {
          "homomorphismId": {
            "type": "string",
            "format": "uri",
            "description": "ID of a related homomorphism"
          },
          "relationship": {
            "type": "string",
            "enum": ["generalization", "specialization", "complement", "inverse", "extension"],
            "description": "Relationship to the other homomorphism"
          },
          "description": {
            "type": "string",
            "description": "Description of the relationship"
          }
        }
      },
      "description": "Relationships to other homomorphisms"
    }
  }
}